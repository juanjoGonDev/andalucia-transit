name: CI

permissions:
  contents: read

on:
  pull_request:
    branches: ['main']
    types: [opened, reopened, ready_for_review, synchronize]

jobs:
  install:
    if: github.event.pull_request.head.repo.fork == false
    name: Install dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.3
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
            .pnpm
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install packages
        run: |
          if [ ! -d "node_modules" ] || [ -z "$(ls -A node_modules)" ] || [ ! -d ".pnpm" ]; then
            echo "Cache incomplete, installing dependencies..."
            pnpm install --frozen-lockfile
          else
            echo "Cache is complete, skipping installation"
          fi
      - name: Save pnpm cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: |
            ~/.pnpm-store
            node_modules
            .pnpm
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

  quality:
    name: ${{ matrix.label }}
    runs-on: ubuntu-latest
    needs: install
    if: github.event.pull_request.head.repo.fork == false
    strategy:
      fail-fast: false
      matrix:
        include:
          - label: Lint
            command: |
              pnpm run lint
          - label: Test scripts
            command: |
              pnpm run test:scripts
          - label: Test angular
            command: |
              pnpm run test:angular
          - label: Deploy pipeline
            command: |
              pnpm run test:deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.3
      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
            .pnpm
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Run ${{ matrix.label }}
        run: ${{ matrix.command }}

  check:
    name: Check all ok
    runs-on: ubuntu-latest
    needs: quality
    if: ${{ always() }}
    env:
      JOB_RESULT: ${{ needs.quality.result }}
    steps:
      - name: Verify status
        run: |
          if [ "$JOB_RESULT" != "success" ]; then
            echo "Quality checks did not succeed"
            exit 1
          fi
          echo "All checks passed"
