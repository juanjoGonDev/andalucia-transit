name: Daily Snapshot Refresh

on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  snapshot:
    name: Refresh data snapshots
    runs-on: ubuntu-latest
    if: github.event.repository.fork == false && (github.actor == github.repository_owner || github.actor == 'github-actions')
    environment: admin
    env:
      NODE_OPTIONS: --max_old_space_size=4096
      SNAPSHOT_BOT_NAME: Andalucia Transit Bot
      SNAPSHOT_BOT_EMAIL: bot@andaluciatransit.local
      SNAPSHOT_BOT_IDENT: Andalucia Transit Bot <bot@andaluciatransit.local>
      SNAPSHOT_BRANCH: automation/update-snapshots
      SNAPSHOT_TITLE: 'task: refresh transport snapshots'
      SNAPSHOT_LABEL: automation
      SNAPSHOT_REVIEW_BODY: I'm **approving** this pull request because **it includes a daily snapshot refresh**
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_FINE }}
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Generate snapshots
        run: npm run snapshot
      - name: Run snapshot tests
        run: npm run test:scripts
      - name: Detect changes
        id: diff
        run: |
          if git diff --quiet; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Configure git author
        if: steps.diff.outputs.changed == 'true'
        run: |
          git config user.name "$SNAPSHOT_BOT_NAME"
          git config user.email "$SNAPSHOT_BOT_EMAIL"
      - name: Prepare pull request body
        if: steps.diff.outputs.changed == 'true'
        run: |
          SNAPSHOT_TIME="$(date -u '+%Y-%m-%d %H:%M UTC')"
          cat > pr-body.md <<'BODY'
          ## Daily snapshot refresh

          This pull request refreshes the transport data snapshots using the CTAN open data service.

          <!-- resource-summary:start -->
          - Data source: Portal de Datos Abiertos de la Red de Consorcios de Transporte de Andalucía (automatically fetched).
          - Scripts: `npm run snapshot`, `npm run test:scripts`
          <!-- resource-summary:end -->
          BODY
          sed -i "s/automatically fetched/automatically fetched at ${SNAPSHOT_TIME}/" pr-body.md
      - name: Create pull request
        id: create-pr
        if: steps.diff.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT_FINE }}
          branch: ${{ env.SNAPSHOT_BRANCH }}
          base: main
          commit-message: ${{ env.SNAPSHOT_TITLE }}
          title: ${{ env.SNAPSHOT_TITLE }}
          body-path: pr-body.md
          author: ${{ env.SNAPSHOT_BOT_IDENT }}
          committer: ${{ env.SNAPSHOT_BOT_IDENT }}
          add-paths: |
            src/assets/data/**
            src/assets/runtime-flags.js
          delete-branch: true
          draft: false
          signoff: false
          labels: ${{ env.SNAPSHOT_LABEL }}
      - name: Enable Pull Request Automerge
        if: steps.create-pr.outputs.pull-request-operation == 'created' && github.actor == 'github-actions'
        run: gh pr merge --squash --auto "${{ steps.create-pr.outputs.pull-request-number }}"
        env:
          GH_TOKEN: ${{ secrets.PAT_FINE }}
      - name: ✅ Approve PR
        if: steps.create-pr.outputs.pull-request-operation == 'created' && github.actor == 'github-actions'
        run: gh pr review ${{ steps.create-pr.outputs.pull-request-url }} --approve -b "$SNAPSHOT_REVIEW_BODY"
        env:
          GH_TOKEN: ${{ secrets.PAT_FINE }}

          
